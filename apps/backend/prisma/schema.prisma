generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement())
  name              String
  email             String   @unique
  description       String?
  iconImageURL      String?  @map("icon_image_url")
  twitterProfileUrl String?  @map("twitter_profile_url")
  displayName       String   @map("display_name")
  authProvider      String[] @map("auth_provider")
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  firebaseUid       String?  @unique @map("firebase_uid")
  updatedAt         DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("users")
}

model Municipality {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  zipcode   String?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  meshis    Meshi[]

  @@map("municipalities")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model Meshi {
  id                 Int           @id @default(autoincrement())
  articleId          String        @unique @map("article_id")
  title              String        @default("unknown")
  imageUrl           String        @default("unknown") @map("image_url")
  storeName          String        @default("unknown") @map("store_name")
  address            String        @default("unknown")
  siteUrl            String        @default("unknown") @map("site_url")
  publishedDate      DateTime      @map("published_date")
  latitude           Float
  longitude          Float
  createdAt          DateTime      @default(now()) @map("created_at") @db.Timestamptz(6)
  municipalityMeshis Int?          @map("municipality_meshis")
  municipality       Municipality? @relation(fields: [municipalityMeshis], references: [id])

  @@map("meshis")
}
